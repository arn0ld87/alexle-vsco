---
import { getEntry } from 'astro:content';
const hero = await getEntry('hero', 'hero');
const data = hero.data;
const ctaHref = data.ctaHref ?? '/projekte';
const mediaPath = data.media ? (data.media.startsWith('/') ? data.media : `/${data.media}`) : undefined;
const isVideo = mediaPath?.includes('.mp4');
const mediaWebm = isVideo ? mediaPath.replace(/\.mp4$/, '.webm') : undefined;
---
<section class="container mx-auto grid items-center gap-12 px-4 py-24 md:grid-cols-2">
  <div>
    <p class="text-sm uppercase tracking-[0.35em] text-blue-400">IT-Systemintegration &amp; DevOps</p>
    <h1 class="mt-3 text-4xl font-semibold tracking-tight md:text-6xl">{data.title}</h1>
    {data.subtitle && <p class="mt-5 max-w-xl text-lg text-gray-300">{data.subtitle}</p>}
    {data.cta && (
      <a
        href={ctaHref}
        class="inline-flex items-center gap-3 rounded-full bg-blue-600 px-7 py-3 text-sm font-medium uppercase tracking-[0.2em] text-white transition hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-400"
      >
        {data.cta}
        <span aria-hidden="true">â†’</span>
      </a>
    )}
  </div>
  {mediaPath && (
    <div class="card-glass relative aspect-video overflow-hidden">
      {isVideo ? (
        <video
          autoplay
          loop
          muted
          playsinline
          preload="metadata"
          poster="/media/alex.avif"
          class="h-full w-full object-cover"
        >
          {mediaWebm && <source src={mediaWebm} type="video/webm" />}
          <source src={mediaPath} type="video/mp4" />
        </video>
      ) : (
        <img src={mediaPath} alt="" class="h-full w-full object-cover" loading="lazy" />
      )}
    </div>
  )}
</section>
