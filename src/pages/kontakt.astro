---
import BaseLayout from '../layouts/BaseLayout.astro';
---
<BaseLayout
  title="Kontakt – Alexander Schneider"
  description="Nimm Kontakt mit Alexander Schneider auf für Projekte rund um IT-Systemintegration, DevOps und KI-Agenten."
  ogImage="/media/alex-gemini.webp"
>
  <main class="container mx-auto px-4 pb-24 pt-16">
    <header class="section-intro">
      <p class="text-sm uppercase tracking-[0.3em] text-blue-400">Kontakt</p>
      <h1 class="text-4xl font-semibold tracking-tight md:text-5xl">Lass uns dein nächstes Projekt besprechen</h1>
      <p class="text-lg text-gray-300">
        Ich unterstütze bei Infrastruktur, Automatisierung und KI-Agenten. Melde dich per Mail, Telefon oder direkt über das Formular.
      </p>
    </header>

    <section class="mt-12 grid gap-12 md:grid-cols-[1.2fr_1fr]">
      <form
        class="card-glass space-y-6 p-8"
        id="contact-form"
        action="https://formspree.io/f/mnqennra"
        method="POST"
      >
        <div id="form-feedback" class="hidden rounded-xl p-4 text-center text-white"></div>
        <div>
          <label class="block text-sm font-medium text-gray-200" for="name">Name</label>
          <input
            class="mt-2 w-full rounded-xl border border-white/10 bg-gray-900 px-4 py-3 text-gray-100 shadow-inner focus:border-blue-400 focus:outline-none"
            type="text"
            id="name"
            name="name"
            required
            autocomplete="name"
          />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-200" for="email">E-Mail</label>
          <input
            class="mt-2 w-full rounded-xl border border-white/10 bg-gray-900 px-4 py-3 text-gray-100 shadow-inner focus:border-blue-400 focus:outline-none"
            type="email"
            id="email"
            name="email"
            required
            autocomplete="email"
          />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-200" for="message">Nachricht</label>
          <textarea
            class="mt-2 h-32 w-full rounded-xl border border-white/10 bg-gray-900 px-4 py-3 text-gray-100 shadow-inner focus:border-blue-400 focus:outline-none"
            id="message"
            name="message"
            required
          ></textarea>
        </div>
        <button
          type="submit"
          class="w-full rounded-full bg-blue-600 px-6 py-3 text-sm font-semibold uppercase tracking-[0.25em] text-white transition hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-400"
        >
          Nachricht senden
        </button>
      </form>

      <aside class="card-glass space-y-8 p-8">
        <div>
          <h2 class="text-sm uppercase tracking-[0.2em] text-blue-400">Direktkontakt</h2>
          <ul class="mt-3 space-y-2 text-sm text-gray-300">
            <li><a href="mailto:schneider@alexle135.de" class="hover:text-white">schneider@alexle135.de</a></li>
            <li><a href="tel:+4915568920209" class="hover:text-white">+49 1556 8920209</a></li>
            <li>Leipzig, Deutschland</li>
          </ul>
        </div>
        <div>
          <h2 class="text-sm uppercase tracking-[0.2em] text-blue-400">Verfügbarkeit</h2>
          <p class="mt-3 text-sm text-gray-300">
            Remote &amp; vor Ort in Mitteldeutschland. Projektbeginn ab 04.11.2025 möglich.
          </p>
        </div>
        <div>
          <h2 class="text-sm uppercase tracking-[0.2em] text-blue-400">Netzwerke</h2>
          <ul class="mt-3 space-y-2 text-sm text-gray-300">
            <li><a href="https://www.linkedin.com" class="hover:text-white">LinkedIn (demnächst)</a></li>
            <li><a href="https://www.xing.com" class="hover:text-white">Xing (demnächst)</a></li>
          </ul>
        </div>
      </aside>
    </section>
  </main>
</BaseLayout>

<script>
  const form = document.getElementById('contact-form');
  const feedbackEl = document.getElementById('form-feedback');
  const submitButton = form.querySelector('button[type="submit"]');

  form.addEventListener('submit', async function(event) {
    event.preventDefault();

    const formData = new FormData(form);
    const name = formData.get('name')?.toString().trim();
    const email = formData.get('email')?.toString().trim();
    const message = formData.get('message')?.toString().trim();

    // --- Client-side validation ---
    if (!name || !email || !message) {
      showFeedback('Bitte fülle alle Felder aus.', 'error');
      return;
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      showFeedback('Bitte gib eine gültige E-Mail-Adresse ein.', 'error');
      return;
    }

    // --- UI feedback for submission ---
    const originalButtonText = submitButton.textContent;
    submitButton.disabled = true;
    submitButton.textContent = 'SENDE...';
    hideFeedback();

    try {
      const response = await fetch(form.action, {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        }
      });

      if (response.ok) {
        showFeedback('Vielen Dank! Deine Nachricht wurde gesendet.', 'success');
        form.reset();
      } else {
        const data = await response.json();
        const errorMessage = data.errors?.map(e => e.message).join(', ') || 'Ein unbekannter Fehler ist aufgetreten.';
        showFeedback(`Fehler: ${errorMessage}`, 'error');
      }
    } catch (error) { {
      showFeedback('Netzwerkfehler. Bitte versuche es später erneut.', 'error');
    }
    } finally {
      submitButton.disabled = false;
      submitButton.textContent = originalButtonText;
    }
  });

  function showFeedback(message, type) {
    feedbackEl.textContent = message;
    feedbackEl.className = `rounded-xl p-4 text-center text-white ${type === 'success' ? 'bg-green-600/80' : 'bg-red-600/80'}`;
    feedbackEl.classList.remove('hidden');
  }

  function hideFeedback() {
    feedbackEl.classList.add('hidden');
  }
</script>
